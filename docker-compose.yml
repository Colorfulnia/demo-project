services:
  # ⭐ MySQL 服务
  mysql:
    image: mysql:8.4.3
    container_name: demo-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: demo_db
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - demo-network
    healthcheck:
      # ⭐ 改进的健康检查：测试真实的数据库连接
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]  #, "-uroot", "-proot123"
      interval: 5s
      timeout: 5s
      retries: 5
      #start_period: 60s  # ⭐ 给 MySQL 60秒启动时间

  # ⭐ Redis 服务
  redis:
    image: redis:8.2.2-alpine
    container_name: demo-redis
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  # ⭐ Spring Boot 应用
  app:
    image: ${DOCKER_USERNAME}/demo-project:latest
    #build: . #Local build before
    container_name: demo-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      # ⭐ 添加 JVM 启动参数，增加连接超时
      #- JAVA_OPTS=-Xms256m -Xmx512m
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - demo-network
    restart: on-failure  #unless-stopped  # ⭐ 改为 unless-stopped

volumes:
  mysql-data:
  redis-data:

networks:
  demo-network:
    driver: bridge